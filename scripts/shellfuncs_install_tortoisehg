#!/bin/bash
#
# Part of 'shellfuncs' git repo
# Inspired by: https://askubuntu.com/questions/1182598/how-to-install-tortoisehg-on-ubuntu-19-10#answer-1246183

PROGRAM_NAME="shellfuncs_install_tortoisehg"

#######################################
# Installs tortoisehg for the desktop. This script has 
# been tested to work on the following distros:
# Pop!_OS 20.04 LTS,
# Globals:
#   OTHER_SCRIPTS_PATH
# Outputs:
#   - Installation output from pip3/apt/make
#   - Echo statements for general tracing
#   - Error outputs from pip3/apt/make/cd/mkdir
#       - In other words most commands in this script do
#       not filter stdout/stderr output
#######################################
shellfuncs_install_tortoisehg () {
    DESTINATION_DIR_PATH="$HOME"/tortoisehg
    PYTHON_EXECUTABLE="$(which python3)"
    TEMP_DIR_NAME="temp"
    TORTOISEHG_REPO_URL="https://foss.heptapod.net/mercurial/tortoisehg/thg"
    BRANCH="stable"
    SYSTEM_DEPENDENCIES=(
        python3-pip 
        build-essential 
        mercurial 
        libxcb-xinerama0 
        pyqt5.qsci-dev 
        python3-iniparse
    )
    PYTHON_DEPENDENCIES=(
        pyqt5
        mercurial
        qscintilla
    )
    # make a folder to hold the tortoise source
    mkdir "$DESTINATION_DIR_PATH" || return 1
    ! cd "$DESTINATION_DIR_PATH" && _shellfuncs_install_tortoisehg_cleanup && return 1
    echo "${PROGRAM_NAME}: Inside destination directory"

    # probably need to check to make sure a python 3 interpreter was loaded into PYTHON_EXECUTABLE
    if [ -z "$PYTHON_EXECUTABLE" ] || [ "$($PYTHON_EXECUTABLE --version | grep -e "Python 3\..*" -c)" -eq 0 ]; then
        echo -e "$ERROR 'python3' does not point to a python 3 interpreter"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${PROGRAM_NAME}: 'python3' symlink points to a python 3 interpreter!"
    sleep 2

    # now to install system dependencies
    for package in "${SYSTEM_DEPENDENCIES[@]}"; do
        if ! sudo apt install "$package" -y; then
            echo -e "$ERROR Could not install $package system package"
            _shellfuncs_install_tortoisehg_cleanup && return 1
        fi
    done
    echo "${PROGRAM_NAME}: Installed system dependencies"

    # make sure that python utilities are up to date
    # NOTE: I usually put double quotes around all my shell variables in scripts 
    # but we would have ejected long before if PYTHON_EXECUTABLE was empty... so yea
    $PYTHON_EXECUTABLE -m pip install --upgrade pip setuptools wheel
    # now to install all python packages/dependencies
    for package in "${PYTHON_DEPENDENCIES[@]}"; do
        if ! pip3 install "$package"; then
            echo -e "$ERROR Could not install $package python package"
            _shellfuncs_install_tortoisehg_cleanup && return 1
        fi
    done
    echo "${PROGRAM_NAME}: Installed python dependencies"
    
    # lets build tortoisehg now, and install a desktop entry!
    if ! hg clone "$TORTOISEHG_REPO_URL" -r "$BRANCH" "$PWD"; then
        echo -e "$ERROR Could not download tortoisehg source"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${PROGRAM_NAME}: Got the goods (aka source code)!"
    sleep 2

    # to prevent tortoisehg from tripping on itself, I decided that I would slot
    # in a python 3 symlink into a temp directory and shove that onto the PATH first
    ! mkdir $TEMP_DIR_NAME && _shellfuncs_install_tortoisehg_cleanup && return 1
    ! cd "$TEMP_DIR_NAME" && _shellfuncs_install_tortoisehg_cleanup && return 1
    if ! sudo ln -sf "$(which python3)" "./python"; then
        echo -e "$ERROR Could not establish symlink for python to python3"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    # out of TEMP_DIR_NAME
    cd ..
    export PATH="${PWD}/${TEMP_DIR_NAME}:${PATH}"

    if ! make local; then
        echo -e "$ERROR Build failed"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${PROGRAM_NAME}: Finally, build from source was successful"
    rm -rf "$TEMP_DIR_NAME"
    cat << _EOF_ > "$HOME"/.local/share/applications/tortoisehg.desktop
[Desktop Entry]
Name=TortoiseHG
Exec=$DESTINATION_DIR_PATH/thg
Comment=Launch TortoiseHG
Terminal=false
Type=Application
Icon=$DESTINATION_DIR_PATH/icons/thg_logo.ico
_EOF_
    if [ $? -ne 0 ] ; then
        echo -e "$ERROR Could not install desktop entry"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo -e "$SUCCESS Installed tortoisehg, if need be, restart the shell"
    cd - > /dev/null || return
}

_shellfuncs_install_tortoisehg_cleanup (){
    echo "${PROGRAM_NAME}: Cleaning up, installed package(s) will not be uninstalled!"
    DESTINATION_DIR_BASENAME="$(basename "$DESTINATION_DIR_PATH")"
    [ -d "$DESTINATION_DIR_BASENAME" ] || cd ..
    [ -d "$DESTINATION_DIR_BASENAME" ] && rm -rf "$DESTINATION_DIR_PATH"
}
