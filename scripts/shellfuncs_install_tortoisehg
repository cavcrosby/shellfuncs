#!/bin/bash
#
# Part of 'shellfuncs' git repo
# Inspired by: https://askubuntu.com/questions/1182598/how-to-install-tortoisehg-on-ubuntu-19-10#answer-1246183

# This is determined in the main shellfunc function
SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME=""

#######################################
# Installs tortoisehg for the desktop.
# Outputs:
#   - Installation output from pip/apt-get/make
#   - Echo statements for general tracing
#   - Error outputs from pip/apt-get/make/cd/mkdir
#       - In other words most commands in this script do
#       not filter stdout/stderr output
# Returns:
#   0 - general success
#   1 - general error
#######################################
shellfuncs_install_tortoisehg() {
    # NOTE: getting the PROGRAM_NAME currently is bash specfic
    # see https://stackoverflow.com/questions/1835943/how-to-determine-function-name-from-inside-a-function
    SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME="${FUNCNAME[0]}"
    DESTINATION_DIR_PATH="${HOME}/tortoisehg"
    PYTHON_EXECUTABLE="$(which python3)"
    TEMP_DIR_NAME="${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}_temp"
    TORTOISEHG_REPO_URL="https://foss.heptapod.net/mercurial/tortoisehg/thg"
    BRANCH="stable"
    SYSTEM_DEPENDENCIES=(
        python3-pip 
        build-essential 
        mercurial 
        libxcb-xinerama0 
        pyqt5.qsci-dev 
        python3-iniparse
    )
    PYTHON_DEPENDENCIES=(
        pyqt5
        mercurial
        qscintilla
    )
    # make a folder to hold the tortoise source
    mkdir "$DESTINATION_DIR_PATH" || return 1
    ! cd "$DESTINATION_DIR_PATH" && _shellfuncs_install_tortoisehg_cleanup && return 1
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: inside destination directory"

    # probably need to check to make sure a python 3 interpreter was loaded into PYTHON_EXECUTABLE
    if [ -z "$PYTHON_EXECUTABLE" ] || [ "$($PYTHON_EXECUTABLE --version | grep -e "Python 3\..*" -c)" -eq 0 ]; then
        echo -e "$ERROR 'python3' does not point to a python 3 interpreter"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: 'python3' symlink points to a python 3 interpreter!"
    sleep 2

    # now to install system dependencies
    if ! sudo apt-get install "${SYSTEM_DEPENDENCIES[@]}" --assume-yes; then
        echo -e "$ERROR could not install all system packages"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: installed system dependencies"

    # make sure that python utilities are up to date
    # NOTE: I usually put double quotes around all my shell variables in scripts 
    # but we would have been ejected long before if PYTHON_EXECUTABLE was empty... so yea
    $PYTHON_EXECUTABLE -m pip install --upgrade pip setuptools wheel
    # now to install all python packages/dependencies
    if ! $PYTHON_EXECUTABLE -m pip install "${PYTHON_DEPENDENCIES[@]}"; then
        echo -e "$ERROR could not install all python packages"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: Installed python dependencies"
    
    # lets build tortoisehg now, and install a desktop entry!
    if ! hg clone "$TORTOISEHG_REPO_URL" --rev "$BRANCH" "$PWD"; then
        echo -e "$ERROR could not download tortoisehg source"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: got the goods (aka source code)!"
    sleep 2

    # to prevent tortoisehg from tripping on itself, I decided that I would slot
    # in a python 3 symlink into a temp directory and shove that onto the PATH first
    ! mkdir $TEMP_DIR_NAME && _shellfuncs_install_tortoisehg_cleanup && return 1
    ! cd "$TEMP_DIR_NAME" && _shellfuncs_install_tortoisehg_cleanup && return 1
    if ! sudo ln --symbolic --force "$(which python3)" "./python"; then
        echo -e "$ERROR could not establish symlink for python to python3"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    # out of TEMP_DIR_NAME
    cd ..
    # TODO(conner@conneracrosby.tech): this is just temporary, was this mean't for the building of hg?
    export PATH="${PWD}/${TEMP_DIR_NAME}:${PATH}"

    if ! make local; then
        echo -e "$ERROR build failed"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: finally, build from source was successful"
    rm --recursive --force "$TEMP_DIR_NAME"
    cat << _EOF_ > "$HOME"/.local/share/applications/tortoisehg.desktop
[Desktop Entry]
Name=TortoiseHG
Exec=$PYTHON_EXECUTABLE $DESTINATION_DIR_PATH/thg
Comment=Launch TortoiseHG
Terminal=false
Type=Application
Icon=$DESTINATION_DIR_PATH/icons/thg_logo.ico
_EOF_
    if [ "$?" -ne 0 ] ; then
        echo -e "$ERROR could not install desktop entry"
        _shellfuncs_install_tortoisehg_cleanup && return 1
    fi
    echo -e "$SUCCESS installed tortoisehg, restart the shell session to restore original PATH"
    cd .. || return 0
}

_shellfuncs_install_tortoisehg_cleanup(){
    echo "${SHELLFUNCS_INSTALL_TORTOISEHG_PROGRAM_NAME}: cleaning up, installed package(s) will not be uninstalled!"
    DESTINATION_DIR_BASENAME="$(basename "$DESTINATION_DIR_PATH")"
    [ -d "$DESTINATION_DIR_BASENAME" ] || cd ..
    [ -d "$DESTINATION_DIR_BASENAME" ] && rm --recursive --force "$DESTINATION_DIR_PATH"
}
