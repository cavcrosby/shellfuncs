#!/bin/bash
# Small setup script that enables the
# user to pull scripts as shell functions in their
# shell session.
# Usage: curl --silent https://raw.githubusercontent.com/reap2sow1/shellfuncs/main/install | bash
set -e
PWD="$(pwd)"
PROGRAM_NAME="install"
ENV_FILE_NAME=".env"
TEMP_DIR_NAME="${PROGRAM_NAME}-temp"
ENV_REMOTE_URL='https://raw.githubusercontent.com/reap2sow1/shellfuncs/main/.env'
# where this repo is located remotely (doesn't have to be github per say)
REMOTE_REPO_URL='https://github.com/reap2sow1/shellfuncs'

if [ "$PWD" != "$HOME" ]; then
    # main reason is to avoid filemode permissions issues
    echo "${PROGRAM_NAME}: re-run this script in $HOME (assuming you haven't changed this!), to run this correctly"
    exit 1
fi

if [ -z "$(which curl)" ]; then
    echo "${PROGRAM_NAME}: curl cannot be found on the PATH!"
    exit 1
fi

if [ -z "$(which git)" ]; then
    echo "${PROGRAM_NAME}: git cannot be found on the PATH!"
    exit 1
fi

mkdir "$TEMP_DIR_NAME" || exit 1
cd "$TEMP_DIR_NAME" || exit 1

# --fail just means to 'fail' silently without a http status code
if ! curl --silent --fail "$ENV_REMOTE_URL" -o "$ENV_FILE_NAME"; then
    echo "${PROGRAM_NAME}: could not fetch $ENV_FILE_NAME from url!"
    exit 1
fi

# shellcheck disable=SC1090
source "./${ENV_FILE_NAME}"
rm "./${ENV_FILE_NAME}"
cd ..
rmdir "$TEMP_DIR_NAME"

if ! [[ "$GIT_REPOS_PATH" ]]; then
    read -r -e -p "What directory are git repositories stored in? ==> " -i "$HOME" GIT_REPOS_PATH <&1
fi
LOCAL_REPO_PATH="${GIT_REPOS_PATH}/${LOCAL_REPO_NAME}"
SCRIPTS_PATH="${LOCAL_REPO_PATH}/${SCRIPTS_DIR_NAME}"

# shellcheck disable=2034
read -r -e -p "Is this a reinstall, y/n? (n) " RE_INSTALL_REPLY <&1

# using parameter expansion, ',,' append will convert the string to lowercase
if [ "${RE_INSTALL_REPLY,,}" == "y" ]; then
    if [ -d "$LOCAL_REPO_PATH" ]; then
        echo "${PROGRAM_NAME}: the $LOCAL_REPO_NAME repo still exists on the local file system"
        echo -e "$ERROR $DOTFILES_REPO_NAME is the 'dotfiles' repo, and it must be reinstalled first!"
        read -r -e -p "Has the 'dotfiles' repo been reinstalled, y/n? (n) " DOTFILES_REINSTALLED_REPLY <&1
        if [ "${DOTFILES_REINSTALLED_REPLY,,}" == "y" ]; then
            rm -rf "$LOCAL_REPO_PATH"
        else {
            echo "${PROGRAM_NAME}: reinstall the 'dotfiles' repo and then re-run the script"
            exit 1
        }
        fi
    fi
fi

git clone --quiet "$REMOTE_REPO_URL" "$LOCAL_REPO_PATH" > /dev/null
{
    echo ""
    echo "# Part of 'shellfuncs' git repo"
    echo "# TO BE INSERTED INTO BASHRC"
    echo "SHELLFUNCS_REPO_PATH=$LOCAL_REPO_PATH"
    echo "SCRIPTS_PATH=$SCRIPTS_PATH"
    echo ""
    cat << '_EOF_'
#######################################
# Loads each 'shellfuncs' script into from SCRIPTS_PATH
# the current shell session.
# Globals:
#   SHELLFUNCS_REPO_PATH
#   SCRIPTS_PATH
#   SUCCESS
#   ERROR
# Outputs:
#   ERROR: If shellfuncs repo could not be found
#######################################
load_shellfuncs () {
    if [[ -d "$SHELLFUNCS_REPO_PATH" ]]; then
        SCRIPT_NAMES="$(ls -1 "$SCRIPTS_PATH")"
        # shellcheck source=/dev/null
        for script_name in $SCRIPT_NAMES; do
            source "$SCRIPTS_PATH/$script_name"
        done
        echo -e "$SUCCESS Loaded 'shellfuncs' repo scripts"
    else
        echo -e "$ERROR 'shellfuncs' repo could not be found, failed to load scripts"
    fi
    return
}

#######################################
# Updates 'shellfuncs' repo
# Globals:
#   SHELLFUNCS_REPO_PATH
#   SUCCESS
#   ERROR
# Outputs:
#   ERROR: If shellfuncs repo could not be found
#######################################
update_shellfuncs () {
    if [[ -d "$SHELLFUNCS_REPO_PATH" ]]; then
        cd "$SHELLFUNCS_REPO_PATH" || exit
        git pull --quiet
        echo -e "$SUCCESS Updated 'shellfuncs' repo"
        cd - > /dev/null || exit
    else
        echo -e "$ERROR 'shellfuncs' repo could not be found, failed to update scripts"
    fi
    return
}

update_shellfuncs
load_shellfuncs
_EOF_

} >> "$BASHRC_PATH"

echo -e "$SUCCESS 'install' was successfull! Restart your shell session to pull in/update scripts"
